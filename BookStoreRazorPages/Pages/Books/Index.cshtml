@page
@model BookStoreRazorPages.Pages.Books.IndexModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Book";
    var requestToken = Antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
 }
<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<html>
<head>
    <link href="~/css/bookindex.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body class="pb-5">
    <div class="container mt-4">
        <button id="addNewBookBtn" type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createModal" >New Book</button>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col">Category</th>
                    <th scope="col">Price</th>
                    <th scope="col">Authors</th>
                    <th scope="col">Cover Photo</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody id="bookTable">
                @foreach (var book in Model.Books)
                {
                    <tr data-id="@book.Id">
                        <td class="book-name">@book.Name</td>
                        <td class="book-description">@book.Description</td>
                        <td class="book-category">@book.Category</td>
                        <td class="book-price">@book.Price</td>
                        <td class="book-authors">@string.Join(", ", book.Authors.Select(a => a.Name))</td>
                        <td class="book-Photos">
                        @foreach (var photo in book.Photos){
                                <img class="mr-3" src="@photo.Path" alt="Generic placeholder image" style="max-width:50px">
                        }
                        </td>
                        <td>
                            <div class="row gap-2" >
                                <button id="editButton" class="btn btn-sm btn-warning btn-edit" data-bs-toggle="modal" data-bs-target="#editModal">Edit</button>
                                <button class="btn btn-sm btn-danger btn-delete">Delete</button>
                            </div>
                           
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item"><a class="page-link" id="previous" href="#">Previous</a></li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item">
                    <a class="page-link" id="pageId" data-page="@i" data-totalNumOfPages="@Model.TotalPages" href="#">@i</a>
                </li>
            }
            <li class="page-item"><a class="page-link" id="next" href="#">Next</a></li>
        </ul>
    </nav>
    <partial name="_AddBookModalPartial.cshtml" for="@Model">
    <partial name="_EditBookModalPartial.cshtml" for="@Model">
    <script src="~/js/book.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<script>
    var indexUrl = '@Url.Page("Index")';
</script>